<?xml version="1.0"?>
<!--
  #%L
  Grill Server
  %%
  Copyright (C) 2014 Inmobi
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
<property>
  <name>grill.drivers</name>
  <value>com.inmobi.grill.driver.hive.HiveDriver</value>
  <description>Drivers enabled for this grill server instance</description>
</property>

<property>
  <name>grill.servicenames</name>
  <value>session,query,metastore,scheduler,quota</value>
  <description>These services would be started in the specified order when grill-server starts up</description>
</property>

<property>
  <name>grill.session.service.impl</name>
  <value>com.inmobi.grill.server.session.HiveSessionService</value>
  <description>Implementation class for session service</description>
</property>

<property>
  <name>grill.query.service.impl</name>
  <value>com.inmobi.grill.server.query.QueryExecutionServiceImpl</value>
  <description>Implementation class for query execution service</description>
</property>

<property>
  <name>grill.quota.service.impl</name>
  <value>com.inmobi.grill.server.quota.QuotaServiceImpl</value>
  <description>Implementation class for quota service</description>
</property>

<property>
  <name>grill.metastore.service.impl</name>
  <value>com.inmobi.grill.server.metastore.CubeMetastoreServiceImpl</value>
  <description>Implementation class for metastore service</description>
</property>

<property>
  <name>grill.scheduler.service.impl</name>
  <value>com.inmobi.grill.server.scheduler.QuerySchedulerServiceImpl</value>
  <description>Implementation class for query scheduler service</description>
</property>

<property>
  <name>grill.server.base.url</name>
  <value>http://localhost:9999/grillapi/</value>
  <description>The base url for the grill server</description>
</property>


<property>
    <name>grill.server.ui.base.uri</name>
    <value>http://localhost:19999/</value>
    <description>The base url for the Grill UI Server</description>
</property>

<property>
    <name>grill.server.ui.static.dir</name>
    <value>webapp/grill-server/static</value>
    <description>The base directory to server UI static files from</description>
</property>

<property>
    <name>grill.server.ui.enable.caching</name>
    <value>true</value>
    <description>Set this to false to disable static file caching in the UI server</description>
</property>

<property>
  <name>grill.query.state.logger.enabled</name>
  <value>true</value>
  <description>Disable or enable the query state logger with this config.
 The location for the logger can be specified in log4j properties for the class
 com.inmobi.grill.server.query.QueryExecutionServiceImpl.QueryStatusLogger </description>
</property>

<property>
  <name>grill.event.service.thread.pool.size</name>
  <value></value>
  <description>The size of thread pool for notifying events. The no value is specified,
 it uses the available processors as the number.</description>
</property>

<property>
  <name>grill.enable.console.metrics</name>
  <value>false</value>
  <description>Enable metrics to be reported on console</description>
</property>

<property>
  <name>grill.enable.ganglia.metrics</name>
  <value>false</value>
  <description>Enable metrics to be reported on ganglia</description>
</property>

<property>
  <name>grill.metrics.ganglia.host</name>
  <value></value>
  <description>The ganglia host name</description>
</property>

<property>
  <name>grill.metrics.ganglia.port</name>
  <value></value>
  <description>The ganglia port</description>
</property>

<property>
  <name>grill.metrics.reporting.period</name>
  <value>10</value>
  <description>The reporting period for metrics. The value is in seconds</description>
</property>

<property>
  <name>grill.server.restart.enabled</name>
  <value>true</value>
  <description>If flag is enabled, all the services will be persisted to persistent
 location passed. </description>
</property>

<property>
  <name>grill.server.recover.onrestart</name>
  <value>true</value>
  <description>If the flag is enabled, all the services will be started from last
 saved state, if disabled all the services will start afresh</description>
</property>

<property>
  <name>grill.server.persist.location</name>
  <value>file:///tmp/grillserver</value>
  <description>The directory in which grill server will persist its state when it is
 going down. The location be on any Hadoop compatible file system. Server will read from
 the location when it is restarted and recovery is enabled. So, Server should have
 both read and write permissions to the location
  </description>
</property>

<property>
  <name>grill.server.mode</name>
  <value>OPEN</value>
  <description>The mode in which server should run. Allowed values are OPEN, READ_ONLY,
 METASTORE_READONLY, METASTORE_NODROP. OPEN mode will allow all requests. READ_ONLY mode
 will allow all requests on session resouce and only GET requests on all other resources.
 METASTORE_READONLY will allow GET on metastore and all other requests in other services.
 METASTORE_NODROP will not allow DELETE on metastore, will allow all other requests.
 </description>
</property>

<property>
  <name>grill.server.session.timeout.seconds</name>
  <value>86400</value>
  <description>Grill session timeout in seconds.If there is no activity on
 the session for this period then the session will be closed.Default timeout is one day.</description>
</property>

</configuration>
