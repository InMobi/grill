~~~
~~ #%L
~~ Grill
~~ %%
~~ Copyright (C) 2014 Inmobi
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~
Installing and running grill

%{toc|section=1|fromDepth=0}

* Building Grill from source

  Here are the commands to build from source.

+---+

   git clone https://github.com/InMobi/grill

   cd grill

   git checkout develop

   mvn clean package
   
+---+

  Once above package command completes successfully, <grill-dist/target> will have <grill-dist-${project.version}-server> and <grill-client-dist/target> will have <grill-client-dist-${project.version}-client> packaged directories for client and server. The build will also produce debian for both client and server in <grill-client-dist/target> and <grill-dist/target>, respectively.

* Installing and running grill-server

  Use can <cd> into the above server and client distribution directories built from source and try it out. Or install the debs from an apt repo or the debians built from source directly. Server and client debians will be installed in </usr/local/grill> and </usr/local/grill-client> respectively.

  Let us go over how the install looks, in the subsections below.

** Server install and configuration

  The directory structure of the server installation :

+---+

  ├── bin
  │   ├── grill-config.sh
  │   └── grill-ctl
  ├── conf
  │   ├── grill-env.sh
  │   ├── grill-site.xml
  │   ├── hive-site.xml
  │   └── log4j.properties
  ├── lib
  │   ├── ST4-4.0.4.jar
  │   ├── activation-1.1.jar
  │   ├── ant-1.9.1.jar
  │   ├── ant-launcher-1.9.1.jar
  │   ├── antlr-2.7.7.jar
  …….
  │   └── zookeeper-3.4.5.jar
  └── webapp
      └── grill-server.war
+---+

  The <bin> folder provides <grill-ctl> which provides commands for starting and stopping the grill server. Other .sh files in <bin> are the scripts used by grill-ctl.

  The server war is available in webapp/ folder, which would be expanded in the same directory, if not overridden. And the lib folder contains all the dependent libraries.

  Server configuration can be overridden in grill-site.xml. See {{{../admin/config.html}server configuration}} for all the configuration parameters available and their default values. You can set up the environment variables such as JAVA_HOME, java options, heap size and etc in grill-env.sh.

  The server logs go into logs/ folder in the install directory, unless overridden. The proper logging configuration can be provided in log4j.properties file.

*** Driver configuration

  If server has HiveDriver as one of the drivers, the configuration for hive driver should be set up in hive-site.xml.
   All the available configuration of the HiveDriver can be found {{{../admin/hivedriver-config.html}here}}.

** Running the server

  The command to start the server:

+---+

  bin/grill-ctl start

+---+

  Once the server is up, you can go to the browser and open the server <baseurl>. You would see a message saying ‘Grill server is up’.

  To check all other services are up and running, try <baseurl>/session, <baseurl>/queryapi, <baseurl>/metastore and all of them will respond with respective service is up.

  You can try out examples described below or use the REST api <link> for each service.

  The command to stop the server:

+---+

  bin/grill-ctl stop

+---+

** Client install and configuration

  The directory structure of the client installation :

+---+
  ├── bin
  │   ├── grill-cli.sh
  │   ├── grill-config.sh
  │   └── run-examples.sh
  ├── conf
  │   ├── grill-client-site.xml
  │   ├── grill-env.sh
  │   └── log4j.properties
  ├── examples
  │   ├── data
  │   │   ├── dim1_local
  │   │   │   └── dim1-local.data
  │   │   └── dim2_local
  │   │       └── dim2-local.data
  │   ├── queries
  │   │   └── dimension-queries.txt
  │   └── resources
  │       ├── db-storage.xml
  │       ├── dim1-local-part.xml
  │       ├── dim1-storage-tables.xml
  │       ├── dim2-local-part.xml
  │       ├── dim2-storage-tables.xml
  │       ├── dim_table.xml
  │       ├── dim_table2.xml
  │       ├── fact1-storage-tables.xml
  │       ├── fact1.xml
  │       ├── fact2-storage-tables.xml
  │       ├── fact2.xml
  │       ├── local-cluster-storage.xml
  │       ├── local-storage.xml
  │       ├── rawfact-storage-tables.xml
  │       ├── rawfact.xml
  │       └── sample-cube.xml
  └── lib
      ├── ST4-4.0.4.jar
       …….
      └── xmlenc-0.52.jar 
+---+

  The <bin> folder provides various scripts for the client.

    * <<run-examples.sh>> provides commands to run examples - create a sample metastore, populate metastore with sample data and run some example queries. This would validate your server is all up and running fine.

    * <<grill-cli.sh>> provides CLI shell for running various commands. Its usage is more described in CLI user guide.
    
    * <<grill-config.sh>> is used internally by other scripts
    
  Client configuration can be overridden in grill-client-site.xml. See {{{../user/client-config.html}client configuration}} for all the configuration parameters available and their default values. You can set up the environment variables such as JAVA_HOME, java options, heap size and etc in grill-env.sh.

  The client logs go into logs/ folder in the install directory, unless overridden. The proper logging configuration can be provided in log4j.properties file.
  
  Examples folder contains sample resource files, data files and query files which will be used by <<run-examples.sh>> script.
  
